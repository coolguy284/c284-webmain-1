add mounted srv_web_old data dir
split env into proc main and srv web main, move env files in _s into appropriate folder
sitemap modtime should only be latest of sitemapped files
add html entity escaping to local sitemap gen since its xml
rework dockerfiles
etag or lastmod match should return 304 even if range request
fix server undockered run (useful for quick purposes)

use map and promise all for git log and others or for none of them

make more lib/extern copied from node_modules in dockerfile

check for srv_web_old env before proxying connection

crlf and all eslint checks on wm
  add semicolon
  remove unused code
  unnecessary semicolon
  replace unnecessary template string
  unused function args and vars in code

old sites
  make old and maybe old2 not use polling, probably use eventsource instead
    dompurify to old node chat
  bring back important
  make wm1, ns, nsn work as subfolder on website, meaning change html and js files to not use absolute paths
  maybe add coolguy284.github.io to site as well
  update github repos description urls once hosted

add validator for canonical urls and meta urls, printing if they exist but do not match real url or if they are not equal
fix all docker containers getting a sigint simultaneously when proc_main one does

http.coolguy284.com or insecure.coolguy284.com

add website flag for sending a x-robots-tag of noindex with the page, and set flag for /misc/debug/templates/

potential put srv_web_main through readline stream and add on timestamp and "[main]" if message has no identifiers otherwise
update options method responses
http2 websocket 404 strange behavior
add sitemap.xml, robots.txt, and others to debug pages, basically all currently unlinked pages
  do the same in node srv, node srv new, c284 git io
make proxies disconnect other end if one end closes, forward errors as well
  make socketLink function in common that does all this to prevent code duplication
  if http proxy res function is given already complete res it will hang and not close socket and browser will load indefinitely as well
create_sitemap return lastmod and other properties, also return array of objects instead of map

add privacy policy
add base64_url encoder/decoder
fancier latency test and time syncer, less NaN
websocket connection not using http2
validation for meta description tags, to supplement validation for canonical urls
  also validator to make sure "to" urls in redirects.txt are the final form of the url for the most part
add no javascript banner to all pages that use javascript in the slightest
add warnings to encrypting, decrypting, hashing, etc. to not use for security purposes
improve localstorage editor cookies handling
add description to more misc pages
sitemap gen proper html parser and proper parsing of urls
sitemap changefreq based on lastmod (maybe)
add adblock detector site (for fun)
chat empty string should show up as anonymous
chat, echo, status websockets should have proper server close exit code and server close procedure where client closes, instead of force close
add alternate webpage access url /api/page?page=<url> or /api/page?page_b64=<b64_url> endpoint with optional &replace_internal_urls=true
  forward headers and call request func with headers, except maybe not forward last modified
  possible future support for full urls for proxy like instead of just server urls
  possible tie in to virtual browser
  maybe a public or api keyed js api to make any http query
add comments to wm1 code
rework docs on wm1, make docs accessible as wm1 subpage, link to all docs from main doc or subdocs
make sure each page in docs is fully up to date and add more pages as necessary
enigma machine and other sites in tools and other from the old site
auto sitemap generator (limit 1 query per website per ip every hour, and limit 20 queries per website per hour)
add strange files page, with weird zips and wims and stuff
status garden with api endpoints or regular endpoints for every http status code
potentially put old sites in archive tab which links to a page with detailed explanations of all of them
use fs.promises and async for everything possible
add nested layers of indexes for unicode
potentially add more multi page auto generated pages like unicode
make misc index proper
replace string startswith checks followed by string slicing with regex matching (ex. srv_web_main/helpers/main.js lines 69-70) 
add top navbar to base64 site and other tools sites and rest of website

hex editor
english words searcher
add pseudo live birth and death tracker that is not linear but instead has realistic randomness in the timing, also maybe other events, also random names
convert server to restful api
add /api/help endpoint that explains api endpoints
  explains /chat/ws and future chat endpoints as well, or points to a /chat/docs endpoint that explains the same
logs reform, make all logged requests debug and turn off debug, put basic info (ip and url) into seperate file for processing and conversion to aggregate format
  beginner log reform is hide ip and maybe url or more from main log, make addl log that doesnt have terminal formatting characters that does have the info, then think of how to collate into url accessed in country and per operating system thing like old server viewshist
add website version to status, maybe also add more things
rename qr code to qr code generator and make qr code reader
converter or smth w. encodings, textboxes, n other stuff and contenteditable div, more general version of base64/url/uricomp etc, but also horizontal instead of vertical
random number gens and testing suites
optional service worker for caching and testing
finish unicode viewer and link it
opencloudhash and cloudhash (csprng based fake hash using database, with api for access), opencloudhash has hash entries visible, cloudhash does not
xampp subfolder /x, wordpress subfolder /x/w
user account system
add open declaration of password security and data handling (when its time)
chat upgrades
  option to send as markdown, bbcode, or html
  text, voice, raw data thru voice, inputs keyboard mouse controller etc sent to bot and output stream from bot (thru voice channel)
spaces
  universes, zones, simple objects and physical simulation regions
add oldg, production ready xampp site, self hosted github equiv, all of which are accessible as subfolders on main or their own seperate domain, in future self hosted git might be main git that i use and thus wont be proxied through srv web main but hosted seperately, but only that hosted seperately

extra:
experiment with unsorted readdirs using fuse, if works potential necessity to sort c284-webmain-1 modtimes.json or maybe just sort it anyway

problems:
if there is a unicode url it can be redirected by the default redirect code and the unicode code one at a time
proc_main index.js seems to stay running if one of sibling docker containers started by it is still running
